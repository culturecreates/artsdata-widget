(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{164:function(e,t,a){"use strict";a.r(t);var n=a(0),r=a.n(n),l=a(14),i=a.n(l),s=(a(80),a(19)),c=a(22),o=a(24),u=a(23),d=a(25),h=(a(81),a(82),a(72)),m=a.n(h),p=a(27),f=a.n(p),b=a(47),E=a.n(b),y=function(e){function t(){return Object(s.a)(this,t),Object(o.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(c.a)(t,[{key:"nameCell",value:function(){return[r.a.createElement("span",{key:"name"},this.props.datasetLabel)]}},{key:"render",value:function(){return r.a.createElement("tr",null,r.a.createElement("td",null,this.nameCell()),r.a.createElement("td",null,this.props.typeLabel),r.a.createElement("td",null,this.props.count))}}]),t}(r.a.Component),v=function e(t,a,n,r){Object(s.a)(this,e),this.dataset=t,this.datasetLabel=a,this.count=n,this.typeLabel=r},g=function(e){function t(){var e;return Object(s.a)(this,t),(e=Object(o.a)(this,Object(u.a)(t).call(this))).refreshServicesFromWD=function(t){e.setState({refreshing:!0});var a=new URL("https://query.wikidata.org/sparql"),n={query:e.sparql_query,format:"json"},r=null;if("GET"===t)Object.keys(n).forEach(function(e){return a.searchParams.append(e,n[e])}),r=fetch(a);else{var l=new URLSearchParams;Object.keys(n).forEach(function(e){return l.append(e,n[e])}),r=fetch(a,{method:"POST",mode:"cors",cache:"no-cache",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:l})}r.then(function(e){return e.json()}).then(function(t){return e.setState({services:t.results.bindings.map(function(e){return new v(e.dataset.value,e.datasetLabel.value,e.count.value,e.typeLabel.value)}),refreshing:!1})}).catch(function(t){console.log(t),e.setState({refreshing:!1})})},e.openAddServiceDialog=function(){e.setState({showAddServiceDialog:!0})},e.closeAddServiceDialog=function(){e.setState({showAddServiceDialog:!1})},e.state={services:[],showAddServiceDialog:!1,refreshing:!1},e.sparql_query='SELECT  distinct ?dataset ?datasetLabel (count(distinct ?item) as ?count)  ?typeLabel WHERE {\n  wd:Q114171774 wdt:P527 ?dataset .\n  optional {  ?item  ?someProperty [ prov:wasDerivedFrom [ pr:P248 ?dataset ] ] ;   wdt:P31/wdt:P279* ?type .\n  filter( ?type = wd:Q43229 || ?type = wd:Q5 || ?type = wd:Q17350442 ) }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }\n}\ngroup by  ?dataset ?datasetLabel ?typeLabel ORDER BY DESC(?datasetLabel)\n',e}return Object(d.a)(t,e),Object(c.a)(t,[{key:"componentDidMount",value:function(){this.refreshServicesFromWD("GET")}},{key:"render",value:function(){var e=this;return r.a.createElement(r.a.Fragment,null,r.a.createElement(m.a,{striped:!0,bordered:!0,hover:!0},r.a.createElement("thead",null,r.a.createElement("tr",null,r.a.createElement("td",null,"Dataset"),r.a.createElement("td",null,"Type"),r.a.createElement("td",null,"Entities Enriched"))),r.a.createElement("tbody",null,this.state.services.map(function(e){return r.a.createElement(y,{datasetLabel:e.datasetLabel,typeLabel:e.typeLabel,count:e.count})}))),r.a.createElement(E.a,{onClick:this.openAddServiceDialog},r.a.createElement("span",{className:"glyphicon glyphicon-plus"})," Add a dataset"),"\xa0\xa0\xa0",r.a.createElement(E.a,{onClick:function(){return e.refreshServicesFromWD("POST")},disabled:this.state.refreshing},r.a.createElement("span",{className:"glyphicon glyphicon-refresh"})," ",this.state.refreshing?"Refreshing\u2026":"Refresh table"),r.a.createElement(f.a,{show:this.state.showAddServiceDialog,onHide:this.closeAddServiceDialog},r.a.createElement(f.a.Header,{closeButton:!0},r.a.createElement(f.a.Title,null,"How to add a dataset to this list")),r.a.createElement(f.a.Body,null,r.a.createElement("p",null,"This list is generated by"," ",r.a.createElement("a",{href:this.sparqlQueryUrl},"a SPARQL query on Wikidata"),". To add your service to it, follow these steps:"),r.a.createElement("ul",null,r.a.createElement("li",null,"Add a statement 'has part' to the LDFI Data Catalog that points to your dataset."),r.a.createElement("li",null,"Refresh this table - it might take a few minutes before your service appears in the table.")))))}},{key:"sparqlQueryUrl",get:function(){return"https://query.wikidata.org/#"+encodeURIComponent(this.sparql_query)}}]),t}(r.a.Component),w=a(1),L=a(33);function k(e){var t=e.to,a=e.title,n=e.exact,l=Object(w.e)({path:t,exact:n})?"active":"";return r.a.createElement("li",{role:"presentation",className:l},r.a.createElement(L.b,{to:t},a))}function S(e){var t=e.style;return r.a.createElement("div",{className:"tabContent",style:t},r.a.createElement("h3",null,"LDFI Contributions to Wikidata"),r.a.createElement("p",null,"This table lists datasets motivated by LDFI to enrich data in Wikidata. It counts the entities enriched with data from the dataset.         "),r.a.createElement(g,null))}var O=function(e){function t(){var e;return Object(s.a)(this,t),(e=Object(o.a)(this,Object(u.a)(t).call(this))).state={selectedEndpoint:"",servicesMap:{},openTab:"servicesList",refreshing:!1,servicesList:[]},e}return Object(d.a)(t,e),Object(c.a)(t,[{key:"render",value:function(){return r.a.createElement(L.a,null,r.a.createElement("div",{className:"App",style:{margin:"20px"}},r.a.createElement("p",{style:{float:"right"}},r.a.createElement("a",{href:"https://github.com/culturecreates/artsdata-widget"},"Source repository")),r.a.createElement("ul",{className:"nav nav-tabs"},r.a.createElement(k,{to:"/",title:"LDFI Wikidata",exact:"true"}),r.a.createElement(k,{to:"/client/",title:"More"})),r.a.createElement(w.a,{exact:!0,path:"/",children:function(e){var t=e.match;return r.a.createElement(S,{style:{display:t?"block":"none"}})}})))}}]),t}(r.a.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(r.a.createElement(O,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},75:function(e,t,a){e.exports=a(164)},80:function(e,t,a){},82:function(e,t,a){}},[[75,1,2]]]);
//# sourceMappingURL=main.3c0a5155.chunk.js.map